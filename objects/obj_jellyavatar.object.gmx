<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprt_p_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mask_index = sprt_boxcheck
depth = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = -1
room_goto(Level_1)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check Inputs
key_right = keyboard_check_pressed(vk_right);
key_left = -keyboard_check_pressed(vk_left);
key_down = keyboard_check_pressed(vk_down);
right = 0
left = 0
//Check border collisions
if (place_meeting(x+320,y,obj_lev1bord)) or (place_meeting(x+320,y,obj_lev2bord)) or (place_meeting(x+320,y,obj_bossbord)) or (place_meeting(x+320,y,obj_superborder))
{
rightyay = 0
}
else rightyay = 1
if (place_meeting(x-384,y,obj_lev1bord)) or (place_meeting(x-384,y,obj_lev2bord)) or (place_meeting(x-320,y,obj_bossbord)) or (place_meeting(x-320,y,obj_superborder))
{
leftyay = 0
}
else leftyay = 1
//React to inputs
move = key_right + key_left; //check what direction you input
if move = 1
{
    if rightyay == 1
    {
    x += 384
    }
}
if move = -1
{
    if leftyay == 1
    {
    x -= 384
    }
}
//Teleportation
if key_down &amp;&amp; (place_meeting(x,y,obj_tutlev)) {
room_goto(Tutorial) }
if key_down &amp;&amp; (place_meeting(x,y,obj_lev1)) {
room_goto(Level_1) }
if key_down &amp;&amp; (place_meeting(x,y,obj_lev2)) {
room_goto(Level_2) }
if key_down &amp;&amp; (place_meeting(x,y,obj_bosslev)) {
room_goto(BossLevel) }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
