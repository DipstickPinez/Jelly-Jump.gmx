<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprt_goomba</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

dir = -1;
movespeed = 2.5;
grav = 0.2;
vel = 0;
vvel = 0;
image_speed = 0.1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Enemy Collision
if (place_meeting(x,y - sprite_height/2 - 2, obj_jelly)) {
    if global.ded = 0 {
    show_debug_message("bounce detected");
    with (obj_jelly) vvel = -bounceoff;
    sound_play(snd_boing)
    instance_destroy();
    }
}
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.ded = 0 {
vel = dir * movespeed; //movement side to side
vvel += grav; //affected by gravity

image_xscale = dir
//Horizontal Collision 
if (place_meeting(x+vel,y,obj_dirt)) //are you going to run into thing in the next step
{
    while(!place_meeting(x+sign(vel),y,obj_dirt)) //are you directly next to thing
    {
        x += sign(vel); //pixel by pixel movement until you come in contac
    }
    dir *= -1
    vel = 0;
}

//Vertical Collision
if (place_meeting(x,y+vvel,obj_dirt)) //same as horizontal
{
    while(!place_meeting(x,y+sign(vvel),obj_dirt)) //same as horizontal
    {
        y += sign(vvel); //same as horizonatal
    }
    vvel = 0; //no direction reverse, but otherwise the same
}

//Diagonal collision
if (place_meeting(x+vel,y+vvel,obj_dirt)) //you get the idea
{
    while(!place_meeting(x+sign(vel),y+sign(vvel),obj_dirt)) 
    {
        x+= sign(vel); 
        y+= sign(vvel);
    }
    dir = -1; 
    vel = 0; 
    vvel = 0;
}
//Border Collision
if (place_meeting(x+vel,y,obj_superborder)) //does the same with borders
{
    while(!place_meeting(x+sign(vel),y,obj_superborder))
    {
        x += sign(vel);
    }
    dir *= -1 
    vel = 0;
}
if (place_meeting(x,y+vvel,obj_superborder))
{
    while(!place_meeting(x,y+sign(vvel),obj_superborder))
    {
        y += sign(vvel);
    }
    vvel = 0;
}
if (place_meeting(x+vel,y+vvel,obj_superborder))
{
    while(!place_meeting(x+sign(vel),y+sign(vvel),obj_superborder))
    {
        x+= sign(vel);
        y+= sign(vvel);
    }
    dir = -1;
    vel = 0;
    vvel = 0;
}
x += vel
y += vvel
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
